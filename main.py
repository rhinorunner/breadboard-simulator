boardStandard = [
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",], #  -
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",], #  +
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",], #  -
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",], #  +
] #10+4 rows, 30 long

backBoardStandard = [
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",], #  -
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",], #  +
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",],
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",], #  -
	[" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",], #  +
] #for electrical currents
#PRINT EACH VALUE WITH 5 CHARACTERS

tableStandard = [
	[" "," "," "],
	[" "," "," "],
	[" "," "," "],
] #3x3, for things like processors, screens, etc. 

"""
		"item": {
			"description": "desc",
			"character": "char",
		},
"""

catalog = {
	"board": {
		"jumper cables": {
			"description": "connects 2 points on the board",
			"character": "J",
		},
		"LCD power": {
			"description": "power for LCD screen, needs 5v",
			"character": "LCDv",
		},
		"LCD ground": {
			"description": "ground for LCD screen",
			"character": "LCDg",
		},
	},
	"table": {
		"LCD screen": {
			"description": "a screen that shows text",
			"character": "LCD",
		},
		"LCD input": {
			"description": "text input for LCD screen, needs to come from processor",
			"character": "LCDi",
		},
		"processor": {
			"description": "processes text for inputs",
			"character": "CPU",
		},
		"processor battery": {
			"description": "battery for processor, needs to be next to it",
			"character": "CPUb",
		},
	},
}
#for multiple items, add number after, such as J1, J2, J3, etc.

class Board:
	def __init__(self,boardType,backBoard):
		if len(boardType) != len(backBoard):
			input("uERROR in class <Board> func. __init__: \nboardType != backBoard")
			return
		self.board = boardType
		self.backBoard = backBoard
	def findCurrent(self,boardCoords: tuple):
		#format: (row,column)
		if boardCoords[0] > len(self.board)-1:
			input("uERROR in class <Board> func. findCurrent: \nboardCoords[0] > len(self.board)")
			return
		if boardCoords[1] > len(self.board[0])-1:
			input("uERROR in class <Board> func. findCurrent: \nboardCoords[1] > len(self.board[0])")
			return
		if boardCoords[0] in [0,1,len(self.board),len(self.board)-1]:
			if "5" in self.backBoard[boardCoords[0]]: return "5"
			if "3.3" in self.backBoard[boardCoords[0]]: return "3.3"
		if self.backBoard[boardCoords[0]][boardCoords[1]] == "5": return "5"
		if self.backBoard[boardCoords[0]][boardCoords[1]] == "3.3": return "3.3"

board1 = Board(boardStandard,backBoardStandard)
board1.backBoard[0][0] = "5"
print(board1.findCurrent((10,30)))